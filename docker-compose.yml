version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: travel_assistant_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-travel_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password}
      POSTGRES_DB: ${POSTGRES_DB:-travel_assistant}
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-travel_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Application Streamlit (pour plus tard)
  # app:
  #   build: .
  #   container_name: travel_assistant_app
  #   ports:
  #     - "8501:8501"
  #   environment:
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_PORT=5432
  #     - POSTGRES_USER=${POSTGRES_USER:-travel_user}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_password}
  #     - POSTGRES_DB=${POSTGRES_DB:-travel_assistant}
  #     - GEMINI_API_KEY=${GEMINI_API_KEY}
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   volumes:
  #     - ./app:/app
  #     - ./chatbot:/app/chatbot
  #     - ./database:/app/database
  #   command: streamlit run app/main.py --server.port=8501 --server.address=0.0.0.0
  #   restart: unless-stopped

  # PgAdmin pour visualiser la BDD (optionnel, utile pour debug)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: travel_assistant_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@travel.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: travel_assistant_network